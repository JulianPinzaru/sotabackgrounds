user                    root;
daemon                  off;
worker_processes        8;
worker_rlimit_nofile    65535;

error_log  stderr info;
pid  /tmp/nginx_notification.pid;

events {
        worker_connections  2048;
        use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_real_ip" "$http_x_forwarded_for"';

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_header_timeout       1m;
    client_body_timeout         1m;
    client_header_buffer_size   32k;
    client_body_buffer_size     256k;
    client_max_body_size        50M;
    large_client_header_buffers 4 16k;
    send_timeout                30;
    keepalive_timeout           60 60;
    reset_timedout_connection   on;
    server_tokens               off;

    # Compression
    gzip                        on;
    gzip_comp_level             6;
    gzip_min_length             512;
    gzip_buffers                8 64k;
    gzip_types                  text/plain text/css text/javascript application/x-javascript text/json;
    gzip_proxied                any;
    expires                     -1;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    upstream uvicorn_upstream {
        server unix:/workspace/docker/uvicorn.sock;
    }

    server {
        listen      80 default_server;
        access_log  off;
        error_log   stderr info;

        charset     utf-8;

        client_max_body_size 10M;   # adjust to taste

        location / {
            proxy_pass http://uvicorn_upstream;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_redirect off;
            proxy_buffering off;
        }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}
